name: Build and release Locus

on: 
  schedule:
    - cron: '*/30 * * * *'
  workflow_dispatch:
    inputs:
        rerelease:
          description: 'Perform re-release check'
          type: boolean
          required: true

jobs:
  check:
    name: Check if Locus needs a re-release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Compare latest release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RERELEASE_CHECK: ${{ github.event.inputs.rerelease }}
        run: |
          bash scripts/release_check.sh
      - name: Upload release2.txt
        uses: actions/upload-artifact@v4
        with:
          name: release2.txt
          path: release2.txt
  
  build:
    name: Build Locus
    runs-on: macos-14
    needs: check
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get Locus source code
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir tmp && cd tmp
          curl -H "Authorization: Bearer $GH_TOKEN" -LOJ $(curl -H "Authorization: Bearer $GH_TOKEN" -Ls https://api.github.com/repos/Myzel394/locus/releases/latest | grep \"zipball_url\" -m 1 | head -1 | tr -d ', ' | sed 's/"//g' | sed 's/zipball_url://g')
          unzip ./*.zip
          cd ./* && export MVDIR=$PWD
          cd .. && mv $MVDIR $MVDIR/../locus
          cd ${{ github.workspace }}
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 15.2.0
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.9'
          channel: 'stable'
      - name: Build Locus
        run: |
          sudo xcodebuild -license accept && xcodebuild -downloadPlatform iOS
          cd tmp/locus && flutter config --no-analytics && flutter --disable-telemetry && flutter build ipa --no-codesign
          cd ${{ github.workspace }} && zip -vr src.zip tmp/locus -x "*.DS_Store"
      - name: Upload source code with build folder
        uses: actions/upload-artifact@v4
        with:
          name: src
          path: src.zip
      - name: Create Locus IPA
        run: |
          cd tmp/locus/build/ios/archive/Runner.xcarchive/Products
          mv ./Applications ./Payload
          zip -vr Locus.zip Payload -x "*.DS_Store"
          mv ./Locus.zip ${{ github.workspace }}/tmp/Locus.ipa
      - name: Upload Locus IPA
        uses: actions/upload-artifact@v4
        with:
          name: Locus.ipa
          path: tmp/Locus.ipa
      
  gh:
    name: Upload GitHub release
    runs-on: macos-14
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20  
      - name: Download release2.txt
        uses: actions/download-artifact@v4
        with:
          name: release2.txt
      - name: Download Locus.ipa
        uses: actions/download-artifact@v4
        with:
          name: Locus.ipa
      - name: Download source code
        uses: actions/download-artifact@v4
        with:
          name: src
      - name: Update release.txt
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RERELEASE_CHECK: ${{ github.event.inputs.rerelease }}
        run: |
          mkdir tmp && mv Locus.ipa tmp/Locus.ipa && cp tmp/Locus.ipa tmp/Locus.tipa && mv src.zip tmp/src.zip
          mv -f release2.txt release.txt
          bash scripts/release_commit.sh
      - name: Get version
        id: version
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd tmp && unzip -o Locus.ipa && cd ..
          npm install && node scripts/version.js
          echo "LOCUS_VERSION=$(cat ${{ github.workspace }}/tmp/version.txt)" >> $GITHUB_OUTPUT
      - name: Get changelog
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/changelog.js
      - name: Upload GitHub release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ${{ github.workspace }}/tmp/changelog.txt
          tag_name: ${{ steps.version.outputs.LOCUS_VERSION }}
          token: "${{ secrets.GITHUB_TOKEN }}"
          files: |
            tmp/Locus.ipa
            tmp/Locus.tipa
            tmp/src.zip
  alt:
    name: Update AltStore source
    runs-on: macos-14
    needs: gh
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download Locus.ipa
        uses: actions/download-artifact@v4
        with:
          name: Locus.ipa  
      - name: Update AltStore source
        run: |
          mkdir tmp && mv Locus.ipa tmp/Locus.ipa && cd tmp && unzip -o Locus.ipa && cd ..
          npm install && node scripts/altstore.js
          git pull && git add -A && git pull && git commit -m "[auto] Update AltStore source" && git push
  
  scarlet:
    name: Update Scarlet source
    runs-on: macos-14
    needs: gh
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Download Locus.ipa
        uses: actions/download-artifact@v4
        with:
          name: Locus.ipa    
      - name: Update Scarlet source
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir tmp && mv Locus.ipa tmp/Locus.ipa && cd tmp && unzip -o Locus.ipa && cd ..
          npm install && node scripts/scarlet.js
          git pull && git add -A && git pull && git commit -m "[auto] Update Scarlet source" && git push
  
